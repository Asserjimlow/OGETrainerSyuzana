unit JournalForm;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, Grids, StdCtrls, ComObj, Unit2;

type
  TFormJournal = class(TForm)
    StringGrid1: TStringGrid;
    btnExit: TButton;
    Button1: TButton;
    procedure Button1Click(Sender: TObject);
    procedure FormShow(Sender: TObject);
    procedure btnExitClick(Sender: TObject);
    procedure FormCreate(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  FormJournal: TFormJournal;

implementation

{$R *.dfm}

procedure TFormJournal.btnExitClick(Sender: TObject);
begin
  FormJournal.Hide;      // Скрыть форму тестирования
  Form2.Show;      // Показать главное меню
end;

procedure TFormJournal.Button1Click(Sender: TObject);
var
  i: Integer;
begin
  // Сохраняем только заголовки
  StringGrid1.RowCount := 2;

  for i := 0 to StringGrid1.ColCount - 1 do
    StringGrid1.Cells[i, 1] := ''; // очищаем первую строку после заголовков

  // Также удалим данные из файла Excel
  if FileExists(ExtractFilePath(Application.ExeName) + 'journal.xlsx') then
    DeleteFile(ExtractFilePath(Application.ExeName) + 'journal.xlsx');

  ShowMessage('Журнал очищен.');

end;

procedure TFormJournal.FormCreate(Sender: TObject);
begin

  StringGrid1.Cells[0, 0] := 'ФИО';
  StringGrid1.Cells[1, 0] := 'Курс';
  StringGrid1.Cells[2, 0] := 'Группа';
  StringGrid1.Cells[3, 0] := 'Баллы';



end;

procedure TFormJournal.FormShow(Sender: TObject);
var
  ExcelApp, WorkBook, WorkSheet: Variant;
  i, row: Integer;
  l, colCount, totalWidth: Integer;
  filePath: string;
  cellValue: Variant;
begin
  colCount := StringGrid1.ColCount;
  totalWidth := StringGrid1.ClientWidth;
  for l := 0 to colCount - 1 do
    StringGrid1.ColWidths[l] := totalWidth div colCount - 2;

  filePath := ExtractFilePath(Application.ExeName) + 'journal.xlsx';

  if not FileExists(filePath) then
  begin
    ShowMessage('Файл журнала не найден.');
    Exit;
  end;

  try
    ExcelApp := CreateOleObject('Excel.Application');
  except
    ShowMessage('Не удалось запустить Excel.');
    Exit;
  end;

  ExcelApp.Visible := False;

  try
    WorkBook := ExcelApp.Workbooks.Open(filePath);
    WorkSheet := WorkBook.Worksheets[1];

    i := 2; // Excel-строки
    row := 1; // StringGrid-строки (0 — заголовки)

    StringGrid1.RowCount := 2; // заголовок + 1 строка хотя бы

    while True do
    begin
      cellValue := WorkSheet.Cells[i, 1].Value;
      if VarIsEmpty(cellValue) or (Trim(VarToStr(cellValue)) = '') then
        Break;

      Inc(row);
      if row >= StringGrid1.RowCount then
        StringGrid1.RowCount := row + 1;

      StringGrid1.Cells[0, row - 1] := VarToStr(WorkSheet.Cells[i, 1].Value);
      StringGrid1.Cells[1, row - 1] := VarToStr(WorkSheet.Cells[i, 2].Value);
      StringGrid1.Cells[2, row - 1] := VarToStr(WorkSheet.Cells[i, 3].Value);
      StringGrid1.Cells[3, row - 1] := VarToStr(WorkSheet.Cells[i, 4].Value);

      Inc(i);
    end;

    WorkBook.Close(False);
  finally
    ExcelApp.Quit;
  end;
end;



end.
